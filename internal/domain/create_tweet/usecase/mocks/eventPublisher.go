// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	model "uala-challenge/internal/model"

	mock "github.com/stretchr/testify/mock"
)

// EventPublisher is an autogenerated mock type for the eventPublisher type
type EventPublisher struct {
	mock.Mock
}

// Publish provides a mock function with given fields: event
func (_m *EventPublisher) Publish(event *model.TweetCreatedEvent) error {
	ret := _m.Called(event)

	if len(ret) == 0 {
		panic("no return value specified for Publish")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.TweetCreatedEvent) error); ok {
		r0 = rf(event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewEventPublisher creates a new instance of EventPublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEventPublisher(t interface {
	mock.TestingT
	Cleanup(func())
}) *EventPublisher {
	mock := &EventPublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
